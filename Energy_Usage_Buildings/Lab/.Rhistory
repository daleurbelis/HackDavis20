colnames(df_tmp)[1] = 'Date'
df_tmp = df %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df_tmp[is.na(df_tmp)] = 0
df_merged = merge(df, df_tmp, by = 'Date', all.x = TRUE)
df_merged[is.na(df_merged)] = 0
colnames(df_merged) = gsub('\\..*', '', colnames(df_merged))
df_tmp_no_date = df_merged[, -1]
colnames(df_tmp_no_date) = gsub('\\..*', '', colnames(df_tmp_no_date))
df_avg = as.data.frame(
sapply(unique(names(df_tmp_no_date)), function(col) rowMeans(df_tmp_no_date[names(df_tmp_no_date) == col]))
)
df = cbind(df_merged[, 1], df_avg)
colnames(df)[1] = 'Date'
}
# return(df_merged)
}
df_final = data_compilation()
identical(df, df_final)
df = read.csv("C:/Users/kchu8/Desktop/GitHub/HackDavis20/Energy_Usage_Buildings/Lab/academicsurge_usage_1-18-2020.csv",
check.names = FALSE)
colnames(df)[1] = 'DateTime'
data_compilation = function()
{
file_list = list()
list_csv = dir(pattern = '*.csv')
print(list_csv[1])
df = read.csv(list_csv[1], check.names = FALSE)
colnames(df)[1] = 'Date'
return(df)
df = df %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df[is.na(df)] = 0
#return(df)
for (i in 2:2)
{
df_tmp = read.csv(list_csv[i], check.names = FALSE)
colnames(df_tmp)[1] = 'Date'
df_tmp = df %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df_tmp[is.na(df_tmp)] = 0
df_merged = merge(df, df_tmp, by = 'Date', all.x = TRUE)
df_merged[is.na(df_merged)] = 0
colnames(df_merged) = gsub('\\..*', '', colnames(df_merged))
df_tmp_no_date = df_merged[, -1]
colnames(df_tmp_no_date) = gsub('\\..*', '', colnames(df_tmp_no_date))
df_avg = as.data.frame(
sapply(unique(names(df_tmp_no_date)), function(col) rowMeans(df_tmp_no_date[names(df_tmp_no_date) == col]))
)
df = cbind(df_merged[, 1], df_avg)
colnames(df)[1] = 'Date'
}
# return(df_merged)
}
df_final = data_compilation()
identical(df, df_final)
View(df)
View(df_final)
data_compilation = function()
{
file_list = list()
list_csv = dir(pattern = '*.csv')
print(list_csv[1])
df = read.csv(list_csv[1], check.names = FALSE)
colnames(df)[1] = 'DateTime'
df = df %>%
mutate(DateTime = substr(DateTime, 1, regexpr(',', DateTime)-1))
df[is.na(df)] = 0
return(df)
for (i in 2:2)
{
df_tmp = read.csv(list_csv[i], check.names = FALSE)
colnames(df_tmp)[1] = 'Date'
df_tmp = df %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df_tmp[is.na(df_tmp)] = 0
df_merged = merge(df, df_tmp, by = 'Date', all.x = TRUE)
df_merged[is.na(df_merged)] = 0
colnames(df_merged) = gsub('\\..*', '', colnames(df_merged))
df_tmp_no_date = df_merged[, -1]
colnames(df_tmp_no_date) = gsub('\\..*', '', colnames(df_tmp_no_date))
df_avg = as.data.frame(
sapply(unique(names(df_tmp_no_date)), function(col) rowMeans(df_tmp_no_date[names(df_tmp_no_date) == col]))
)
df = cbind(df_merged[, 1], df_avg)
colnames(df)[1] = 'Date'
}
# return(df_merged)
}
df_final = data_compilation()
df = read.csv("C:/Users/kchu8/Desktop/GitHub/HackDavis20/Energy_Usage_Buildings/Lab/academicsurge_usage_1-18-2020.csv",
check.names = FALSE)
colnames(df)[1] = 'DateTime'
df = df %>%
mutate(DateTime = substr(DateTime, 1, regexpr(",", DateTime)-1))
df[is.na(df)] = 0
identical(df, df_final)
data_compilation = function()
{
file_list = list()
list_csv = dir(pattern = '*.csv')
print(list_csv[1])
df = read.csv(list_csv[1], check.names = FALSE)
colnames(df)[1] = 'DateTime'
df = df %>%
mutate(DateTime = substr(DateTime, 1, regexpr(',', DateTime)-1))
df[is.na(df)] = 0
for (i in 2:2)
{
df_tmp = read.csv(list_csv[i], check.names = FALSE)
colnames(df_tmp)[1] = 'Date'
df_tmp = df %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df_tmp[is.na(df_tmp)] = 0
return(df_tmp)
df_merged = merge(df, df_tmp, by = 'Date', all.x = TRUE)
df_merged[is.na(df_merged)] = 0
colnames(df_merged) = gsub('\\..*', '', colnames(df_merged))
df_tmp_no_date = df_merged[, -1]
colnames(df_tmp_no_date) = gsub('\\..*', '', colnames(df_tmp_no_date))
df_avg = as.data.frame(
sapply(unique(names(df_tmp_no_date)), function(col) rowMeans(df_tmp_no_date[names(df_tmp_no_date) == col]))
)
df = cbind(df_merged[, 1], df_avg)
colnames(df)[1] = 'Date'
}
# return(df_merged)
}
df_final = data_compilation()
data_compilation = function()
{
file_list = list()
list_csv = dir(pattern = '*.csv')
print(list_csv[1])
df = read.csv(list_csv[1], check.names = FALSE)
colnames(df)[1] = 'DateTime'
df = df %>%
mutate(DateTime = substr(DateTime, 1, regexpr(',', DateTime)-1))
df[is.na(df)] = 0
for (i in 2:2)
{
df_tmp = read.csv(list_csv[i], check.names = FALSE)
colnames(df_tmp)[1] = 'DateTime'
df_tmp = df %>%
mutate(DateTime = substr(DateTime, 1, regexpr(',', DateTime)-1))
df_tmp[is.na(df_tmp)] = 0
return(df_tmp)
df_merged = merge(df, df_tmp, by = 'Date', all.x = TRUE)
df_merged[is.na(df_merged)] = 0
colnames(df_merged) = gsub('\\..*', '', colnames(df_merged))
df_tmp_no_date = df_merged[, -1]
colnames(df_tmp_no_date) = gsub('\\..*', '', colnames(df_tmp_no_date))
df_avg = as.data.frame(
sapply(unique(names(df_tmp_no_date)), function(col) rowMeans(df_tmp_no_date[names(df_tmp_no_date) == col]))
)
df = cbind(df_merged[, 1], df_avg)
colnames(df)[1] = 'Date'
}
# return(df_merged)
}
df_final = data_compilation()
df2 = read.csv('C:/Users/kchu8/Desktop/GitHub/HackDavis20/Energy_Usage_Buildings/Lab/aggiestadium_usage_1-18-2020.csv',
check.names = FALSE)
colnames(df2)[1] = "DateTime"
df2 = df2 %>%
mutate(DateTime = substr(DateTime, 1, regexpr(",", DateTime)-1))
df2[is.na(df2)] = 0
identical(df2, df_final)
data_compilation = function()
{
file_list = list()
list_csv = dir(pattern = '*.csv')
print(list_csv[1])
df = read.csv(list_csv[1], check.names = FALSE)
colnames(df)[1] = 'DateTime'
df = df %>%
mutate(DateTime = substr(DateTime, 1, regexpr(',', DateTime)-1))
df[is.na(df)] = 0
for (i in 2:2)
{
print(list_csv[i])
df_tmp = read.csv(list_csv[i], check.names = FALSE)
colnames(df_tmp)[1] = 'DateTime'
df_tmp = df %>%
mutate(DateTime = substr(DateTime, 1, regexpr(',', DateTime)-1))
df_tmp[is.na(df_tmp)] = 0
# df2 = read.csv('C:/Users/kchu8/Desktop/GitHub/HackDavis20/Energy_Usage_Buildings/Lab/aggiestadium_usage_1-18-2020.csv',
#                check.names = FALSE)
# colnames(df2)[1] = "DateTime"
# df2 = df2 %>%
#   mutate(DateTime = substr(DateTime, 1, regexpr(",", DateTime)-1))
# df2[is.na(df2)] = 0
return(df_tmp)
df_merged = merge(df, df_tmp, by = 'Date', all.x = TRUE)
df_merged[is.na(df_merged)] = 0
colnames(df_merged) = gsub('\\..*', '', colnames(df_merged))
df_tmp_no_date = df_merged[, -1]
colnames(df_tmp_no_date) = gsub('\\..*', '', colnames(df_tmp_no_date))
df_avg = as.data.frame(
sapply(unique(names(df_tmp_no_date)), function(col) rowMeans(df_tmp_no_date[names(df_tmp_no_date) == col]))
)
df = cbind(df_merged[, 1], df_avg)
colnames(df)[1] = 'Date'
}
# return(df_merged)
}
df_final = data_compilation()
data_compilation = function()
{
file_list = list()
list_csv = dir(pattern = '*.csv')
print(list_csv[1])
df = read.csv(list_csv[1], check.names = FALSE)
colnames(df)[1] = 'DateTime'
df = df %>%
mutate(DateTime = substr(DateTime, 1, regexpr(',', DateTime)-1))
df[is.na(df)] = 0
for (i in 2:2)
{
df_tmp = read.csv(list_csv[i], check.names = FALSE)
colnames(df_tmp)[1] = 'DateTime'
df_tmp = df_tmp %>%
mutate(DateTime = substr(DateTime, 1, regexpr(',', DateTime)-1))
df_tmp[is.na(df_tmp)] = 0
return(df_tmp)
df_merged = merge(df, df_tmp, by = 'Date', all.x = TRUE)
df_merged[is.na(df_merged)] = 0
colnames(df_merged) = gsub('\\..*', '', colnames(df_merged))
df_tmp_no_date = df_merged[, -1]
colnames(df_tmp_no_date) = gsub('\\..*', '', colnames(df_tmp_no_date))
df_avg = as.data.frame(
sapply(unique(names(df_tmp_no_date)), function(col) rowMeans(df_tmp_no_date[names(df_tmp_no_date) == col]))
)
df = cbind(df_merged[, 1], df_avg)
colnames(df)[1] = 'Date'
}
# return(df_merged)
}
df_final = data_compilation()
identical(df2, df_final)
data_compilation = function()
{
file_list = list()
list_csv = dir(pattern = '*.csv')
print(list_csv[1])
df = read.csv(list_csv[1], check.names = FALSE)
colnames(df)[1] = 'DateTime'
df = df %>%
mutate(DateTime = substr(DateTime, 1, regexpr(',', DateTime)-1))
df[is.na(df)] = 0
for (i in 2:2)
{
df_tmp = read.csv(list_csv[i], check.names = FALSE)
colnames(df_tmp)[1] = 'DateTime'
df_tmp = df_tmp %>%
mutate(DateTime = substr(DateTime, 1, regexpr(',', DateTime)-1))
df_tmp[is.na(df_tmp)] = 0
df_merged = merge(df, df_tmp, by = 'Date', all.x = TRUE)
df_merged[is.na(df_merged)] = 0
colnames(df_merged) = gsub('\\..*', '', colnames(df_merged))
df_tmp_no_date = df_merged[, -1]
colnames(df_tmp_no_date) = gsub('\\..*', '', colnames(df_tmp_no_date))
df_avg = as.data.frame(
sapply(unique(names(df_tmp_no_date)), function(col) rowMeans(df_tmp_no_date[names(df_tmp_no_date) == col]))
)
df = cbind(df_merged[, 1], df_avg)
colnames(df)[1] = 'Date'
}
return(df)
}
df_final = data_compilation()
rm(list = ls())
setwd("C:/Users/kchu8/Desktop/GitHub/HackDavis20/Energy_Usage_Buildings/Lab/")
data_compilation = function()
{
file_list = list()
list_csv = dir(pattern = '*.csv')
print(list_csv[1])
df = read.csv(list_csv[1], check.names = FALSE)
colnames(df)[1] = 'Date'
df = df %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df[is.na(df)] = 0
for (i in 2:2)
{
df_tmp = read.csv(list_csv[i], check.names = FALSE)
colnames(df_tmp)[1] = 'Date'
df_tmp = df_tmp %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df_tmp[is.na(df_tmp)] = 0
df_merged = merge(df, df_tmp, by = 'Date', all.x = TRUE)
df_merged[is.na(df_merged)] = 0
colnames(df_merged) = gsub('\\..*', '', colnames(df_merged))
df_tmp_no_date = df_merged[, -1]
colnames(df_tmp_no_date) = gsub('\\..*', '', colnames(df_tmp_no_date))
df_avg = as.data.frame(
sapply(unique(names(df_tmp_no_date)), function(col) rowMeans(df_tmp_no_date[names(df_tmp_no_date) == col]))
)
df = cbind(df_merged[, 1], df_avg)
colnames(df)[1] = 'Date'
}
return(df)
}
df_final = data_compilation()
data_compilation = function()
{
file_list = list()
list_csv = dir(pattern = '*.csv')
print(list_csv[1])
df = read.csv(list_csv[1], check.names = FALSE)
colnames(df)[1] = 'Date'
df = df %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df[is.na(df)] = 0
for (i in 2:length(list_csv))
{
df_tmp = read.csv(list_csv[i], check.names = FALSE)
colnames(df_tmp)[1] = 'Date'
df_tmp = df_tmp %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df_tmp[is.na(df_tmp)] = 0
df_merged = merge(df, df_tmp, by = 'Date', all.x = TRUE)
df_merged[is.na(df_merged)] = 0
colnames(df_merged) = gsub('\\..*', '', colnames(df_merged))
df_tmp_no_date = df_merged[, -1]
colnames(df_tmp_no_date) = gsub('\\..*', '', colnames(df_tmp_no_date))
df_avg = as.data.frame(
sapply(unique(names(df_tmp_no_date)), function(col) rowMeans(df_tmp_no_date[names(df_tmp_no_date) == col]))
)
df = cbind(df_merged[, 1], df_avg)
colnames(df)[1] = 'Date'
}
return(df)
}
df_final = data_compilation()
View(df_final)
write.csv(df_final, 'combined_lab_energy_usage.csv')
?write_csv
?write.csv
View(df_final)
type(df_final['Date'])
typeof(df_final['Date'])
typeof(df_final['Date'][1])
str(df_final)
as.Date(final_df['Date'], format = "%m/%d/%Y")
as.Date(df_final['Date'], format = "%m/%d/%Y")
View(df_final)
as.Date(df_final['Date'], format = "%d/%m/%Y")
library(lubridate)
mydate <- mdy_hms(as.character(df_final['Date']))
mydate <- mdy(as.character(df_final['Date']))
file_list = list()
list_csv = dir(pattern = '*.csv')
print(list_csv[1])
df = read.csv(list_csv[1], check.names = FALSE)
str(df)
colnames(df)[1] = 'Date'
str(df)
mydate = mdy_hms(as.character(df['Date']))
df['Date']
df['Date'][0]
df['Date'][1]
df['Date'][1]
x = df['Date']
View(x)
df['Date'][1,]
df['Date'][]
df['Date'][1]
df['Date'][1]
df['Date'][1,]
df['Date'][1,]
as.Date(df['Date'][1,])
as.Date(df['Date'])
str(df)
df = read.csv(list_csv[1], check.names = FALSE, stringsAsFactors = FALSE)
colnames(df)[1] = 'Date'
str(df)
as.Date(df['Date'])
library(dplyr)
library(lubridate)
rm(list = ls())
setwd("C:/Users/kchu8/Desktop/GitHub/HackDavis20/Energy_Usage_Buildings/Lab/")
data_compilation = function()
{
file_list = list()
list_csv = dir(pattern = '*.csv')
print(list_csv[1])
df = read.csv(list_csv[1], check.names = FALSE, stringsAsFactors = FALSE)
colnames(df)[1] = 'Date'
df = df %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df[is.na(df)] = 0
for (i in 2:length(list_csv))
{
df_tmp = read.csv(list_csv[i], check.names = FALSE, stringsAsFactors = FALSE)
colnames(df_tmp)[1] = 'Date'
df_tmp = df_tmp %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df_tmp[is.na(df_tmp)] = 0
df_merged = merge(df, df_tmp, by = 'Date', all.x = TRUE)
df_merged[is.na(df_merged)] = 0
colnames(df_merged) = gsub('\\..*', '', colnames(df_merged))
df_tmp_no_date = df_merged[, -1]
colnames(df_tmp_no_date) = gsub('\\..*', '', colnames(df_tmp_no_date))
df_avg = as.data.frame(
sapply(unique(names(df_tmp_no_date)), function(col) rowMeans(df_tmp_no_date[names(df_tmp_no_date) == col]))
)
df = cbind(df_merged[, 1], df_avg)
colnames(df)[1] = 'Date'
}
return(df)
}
df_final = data_compilation()
rm(list = ls())
setwd("C:/Users/kchu8/Desktop/GitHub/HackDavis20/Energy_Usage_Buildings/Lab/")
data_compilation = function()
{
file_list = list()
list_csv = dir(pattern = '*.csv')
print(list_csv[1])
df = read.csv(list_csv[1], check.names = FALSE)
colnames(df)[1] = 'Date'
df = df %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df[is.na(df)] = 0
for (i in 2:length(list_csv))
{
df_tmp = read.csv(list_csv[i], check.names = FALSE, stringsAsFactors = FALSE)
colnames(df_tmp)[1] = 'Date'
df_tmp = df_tmp %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df_tmp[is.na(df_tmp)] = 0
df_merged = merge(df, df_tmp, by = 'Date', all.x = TRUE)
df_merged[is.na(df_merged)] = 0
colnames(df_merged) = gsub('\\..*', '', colnames(df_merged))
df_tmp_no_date = df_merged[, -1]
colnames(df_tmp_no_date) = gsub('\\..*', '', colnames(df_tmp_no_date))
df_avg = as.data.frame(
sapply(unique(names(df_tmp_no_date)), function(col) rowMeans(df_tmp_no_date[names(df_tmp_no_date) == col]))
)
df = cbind(df_merged[, 1], df_avg)
colnames(df)[1] = 'Date'
}
return(df)
}
df_final = data_compilation()
data_compilation = function()
{
file_list = list()
list_csv = dir(pattern = '*.csv')
print(list_csv[1])
df = read.csv(list_csv[1], check.names = FALSE)
colnames(df)[1] = 'Date'
df = df %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df[is.na(df)] = 0
for (i in 2:length(list_csv))
{
df_tmp = read.csv(list_csv[i], check.names = FALSE)
colnames(df_tmp)[1] = 'Date'
df_tmp = df_tmp %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df_tmp[is.na(df_tmp)] = 0
df_merged = merge(df, df_tmp, by = 'Date', all.x = TRUE)
df_merged[is.na(df_merged)] = 0
colnames(df_merged) = gsub('\\..*', '', colnames(df_merged))
df_tmp_no_date = df_merged[, -1]
colnames(df_tmp_no_date) = gsub('\\..*', '', colnames(df_tmp_no_date))
df_avg = as.data.frame(
sapply(unique(names(df_tmp_no_date)), function(col) rowMeans(df_tmp_no_date[names(df_tmp_no_date) == col]))
)
df = cbind(df_merged[, 1], df_avg)
colnames(df)[1] = 'Date'
}
return(df)
}
df_final = data_compilation()
library(dplyr)
library(lubridate)
rm(list = ls())
setwd("C:/Users/kchu8/Desktop/GitHub/HackDavis20/Energy_Usage_Buildings/Lab/")
data_compilation = function()
{
file_list = list()
list_csv = dir(pattern = '*.csv')
print(list_csv[1])
df = read.csv(list_csv[1], check.names = FALSE)
colnames(df)[1] = 'Date'
df = df %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df[is.na(df)] = 0
for (i in 2:length(list_csv))
{
df_tmp = read.csv(list_csv[i], check.names = FALSE)
colnames(df_tmp)[1] = 'Date'
df_tmp = df_tmp %>%
mutate(Date = substr(Date, 1, regexpr(',', Date)-1))
df_tmp[is.na(df_tmp)] = 0
df_merged = merge(df, df_tmp, by = 'Date', all.x = TRUE)
df_merged[is.na(df_merged)] = 0
colnames(df_merged) = gsub('\\..*', '', colnames(df_merged))
df_tmp_no_date = df_merged[, -1]
colnames(df_tmp_no_date) = gsub('\\..*', '', colnames(df_tmp_no_date))
df_avg = as.data.frame(
sapply(unique(names(df_tmp_no_date)), function(col) rowMeans(df_tmp_no_date[names(df_tmp_no_date) == col]))
)
df = cbind(df_merged[, 1], df_avg)
colnames(df)[1] = 'Date'
}
return(df)
}
df_final = data_compilation()
